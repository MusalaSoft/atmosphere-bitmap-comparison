// This file is part of the ATMOSPHERE mobile testing framework.
// Copyright (C) 2016 MusalaSoft
//
// ATMOSPHERE is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// ATMOSPHERE is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with ATMOSPHERE.  If not, see <http://www.gnu.org/licenses/>.

plugins {
    id "java"
    id "maven-publish"
    id "com.jfrog.bintray" version "1.8.1"
}

// bintray publishing parameters
version = '0.0.1'
def organizationName = 'musala'
def repoName = 'atmosphere'
def projectName = 'atmosphere-bitmap-comparison'
def url = 'https://github.com/MusalaSoft/atmosphere-bitmap-comparison.git'
def description = ''

jar {
    manifest {
        attributes 'Implementation-Title': 'Atmosphere Bitmap Comparison',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

publishing {
    publications {
        bitmapComparison(MavenPublication) {
            groupId 'com.musala.atmosphere'
            artifactId "$projectName"
            version version

            from components.java

            if (System.getProperty('bintray.user') != null) {
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    repositories {
        mavenLocal()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Test.class"
    exclude "**/MatrixComparatorTest.class"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/*
 This is publishing task that uploads the artifacts to bintray.com.
 see: https://github.com/bintray/gradle-bintray-plugin
 see: https://reflectoring.io/guide-publishing-to-bintray-with-gradle/

 Use the following command for automatic upload to bintray:
 $ ./gradlew bintrayUpload -Dbintray.user=<BINTRAY_USERNAME> -Dbintray.key=<BINTRAY_API_KEY> -Dgpg.pass=<ATMOSPHERE_PASSPHRASE>
*/
bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['bitmapComparison']

	pkg {
        repo = "$repoName" // existing repository in bintray to add the artifacts to
        name = "$projectName" // package name, current project name
        userOrg = "$organizationName" // the name of the organization, If not added will use 'BINTRAY_USER' by default
        licenses = ['GPL-3.0']
        vcsUrl = "$url" // your VCS URL
        version {
            name = project.version.toString()
            desc = "$description"
            released  = new Date()

            gpg {
                sign = true // Determines whether to GPG sign the files. The default is false
                passphrase = System.getProperty('gpg.pass') // Optional. The passphrase for GPG signing'
            }
        }
    }
}
